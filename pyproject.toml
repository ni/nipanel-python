[tool.poetry]
name = "nipanel"
version = "0.1.0"
description = "NI Panel Python API"
authors = ["NI <opensource@ni.com>"]
readme = "README.md"
packages = [{ include = "nipanel", from = "src" }, { include = "ni", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.9,<4.0,!=3.9.7" # Exclude 3.9.7 due to streamlit not supporting it
grpcio = {version=">=1.49.0,<2.0"}
protobuf = {version=">=4.21"}
ni-measurement-plugin-sdk = {version=">=2.3"}
typing-extensions = ">=4.13.2"
streamlit = ">=1.24"
nitypes = {version=">=0.1.0dev2", allow-prereleases=true}
debugpy = "^1.8.1"

[tool.poetry.group.dev.dependencies]
types-grpcio = ">=1.0"
types-protobuf = ">=4.21"

[tool.poetry.group.lint.dependencies]
bandit = { version = ">=1.7", extras = ["toml"] }
ni-python-styleguide = ">=0.4.1"
mypy = ">=1.0"

[tool.poetry.group.test.dependencies]
pytest = ">=7.2"
pytest-cov = ">=4.0"
pytest-mock = ">=3.0"

[tool.poetry.group.codegen.dependencies]
grpcio-tools = [
  {version = "1.49.1", python = ">=3.9,<3.12"},
  {version = "1.59.0", python = ">=3.12,<3.13"},
  {version = "1.67.0", python = "^3.13"},
]
mypy-protobuf = ">=3.4"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
# The latest Sphinx requires a recent Python version.
Sphinx = { version = ">=8.2", python = "^3.11" }
sphinx-rtd-theme = ">=1.0.0"
sphinx-autoapi = ">=1.8.4"
m2r2 = ">=0.3.2"
toml = ">=0.10.2"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.ni-python-styleguide]
extend_exclude = ".tox,docs,src/ni/pythonpanel/v1,src/ni/protobuf/types/"

[tool.black]
extend-exclude = '\.tox/|docs/|src/ni/pythonpanel/v1/|src/ni/protobuf/types/'
line-length = 100

[tool.mypy]
files = "examples/,src/nipanel/,tests/"
namespace_packages = true
strict = true

[[tool.mypy.overrides]]
module = [
  # https://github.com/ni/hightime/issues/4 - Add type annotations
  "hightime.*",
  "grpc.framework.foundation.*",
]
ignore_missing_imports = true

[tool.bandit]
skips = [
  "B101", # assert_used
]

[tool.pytest.ini_options]
addopts = "--doctest-modules --strict-markers"
testpaths = ["src/nipanel", "tests"]
